CODE LAYOUT for personal refference not working code 



------ I created a context to determine where to route the calls. In this case I used "ivr"



require('dotenv').config();
const { Voice } = require('@signalwire/realtime-api')


-------TOKENS

const projectId = process.env.SIGNALWIRE_PROJECT_ID;
const token = process.env.SIGNALWIRE_TOKEN;
const verifiedNumber = process.env.VERIFIED_NUMBER;

const client = new Voice.Client({
  project: projectId,
  token: token,
  contexts: ["ivr"],
});



---------  I then created an event handler for receiving calls.


console.log("started");

client.on("call.received", async (call) => {
        console.log("Got call", call.from, call.to);

        try {
            await call.answer();
            console.log("Inbound call answered");
        } catch (error) {
            console.error("Error answering inbound call", error);
        }



-----------3) Next I created a Playlist where the first TTS reads out 4 Options: (Note: before starting the TTS added a sound to start the call, 
              in this case I added a forest .wav. this was because I had a hard time finding a train sound...)         
                  Press 1 - TTS           
                  Press 2 - event handler (to record caller data from voice to text)          
                  Press 3  - a call forward to a verified number (in this case it will go to my cell phone)          
                  Press 0 - a re-prompt that just repeats the first TTS (repeating the menu options) 



        const playlist = new Voice.Playlist({ volume: 1.0 })
            .add(
                Voice.Playlist.Audio({
                    url: "https://www.mediacollege.com/downloads/sound-effects/nature/forest/forest-bright_01.wav",
                })
            )
            .add(
                Voice.Playlist.TTS({
                    text: "Thank you for calling the Hogwarts school of Witchcraft and Wizardry.",
                })
            )
            .add(Voice.Playlist.Silence({ duration: 1 }))
            .add(
                Voice.Playlist.TTS({
                    text: "For Ollivanders wand sales shop press 1. For Wichcraft and wizard spell support appointment line press 2. To speak with a representative about student housing press 3. To hear all options again press 0",
                })
            );


----------------   hold prompt for responce (dial number)


        await promptCallOptions(call, playlist);
    });


----------------   I need to Prompt the caller and I wanted it to set it to respond to dial pad digits and not speech. I set the input to digits instead of speech and indicated a terminator at 1 digit. 




const promptCallOptions = async (call, playlist) => {
  try {
    const initialPrompt = await call.prompt({
      playlist: playlist,
      digits: {
        max: 1,
        digitTimeout: 2,
      },
    });

    const { digits } = await initialPrompt.waitForResult();





---------------    Press 1 - TTS  (after TTS phone will hang up    



    switch (digits) {
      case "1":
        const playback = await call.playTTS({
          text: "You have reached Ollivanders wand sales shop. Our hours of operations vary from day to day. We are currently closed to new wand selections due to inventory shortages. Please try calling us back on another day. God Speed!",
        });
        await playback.waitForEnded();
        call.hangup();
        break;


-------------   This starts with prompt and will record speach after text prompt is stated. 


      case "2":
        call.on("prompt.ended", (p) => {
          console.log(p.id, p.text);
          call.hangup();
        });

        const spellSupportPrompt = await call.prompt({
          playlist: new Voice.Playlist().add(
            Voice.Playlist.TTS({
              text: "You have reached the Witchcraft and Wizard spell support appointment line. Please say your name and number, reason for calling, and requested time of appointment.",
            })
          ),
          speech: {
            endSilenceTimeout: 1,
            speechTimeout: 60,
            language: "en-US",
          },
        });
        break;



------------- Replay menue or re-start playlist TTS



      case "0":
        await promptCallOptions(call, playlist);
        break;


--------------- Forward call to varrified number 


      case "3":
        const peer = await call.connectPhone({
          from: verifiedNumber,
          to: call.from,
          timeout: 30,
        });
        break;
      default:
      // Handle other cases or leave it empty if not needed
    }
  } catch (error) {
    console.error("Error during promptCallOptions:", error);
  }
};
